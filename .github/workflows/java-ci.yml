name: Java CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Download JUnit jars
      run: |
        mkdir libs
        curl -L -o libs/junit-jupiter-api.jar https://repo1.maven.org/maven2/org/junit/jupiter/junit-jupiter-api/5.10.2/junit-jupiter-api-5.10.2.jar
        curl -L -o libs/apiguardian-api.jar https://repo1.maven.org/maven2/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar
        curl -L -o libs/opentest4j.jar https://repo1.maven.org/maven2/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar
        curl -L -o libs/junit-jupiter-engine.jar https://repo1.maven.org/maven2/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar
        curl -L -o libs/junit-platform-console-standalone.jar https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.10.2/junit-platform-console-standalone-1.10.2.jar

    - name: Supprimer module-info.java
      run: rm -f ./src/module-info.java

    - name: Compile Java project
      run: |
        find ./src -name "*.java" > sources.txt
        mkdir -p out
        javac -cp "libs/*" -d out @sources.txt

    - name: Run JUnit tests
      run: |
        java -jar libs/junit-platform-console-standalone.jar \
          --class-path out \
          --scan-classpath

    - name: Done
      run: echo "Compilation termin√©e sans erreurs."
